
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	 charset utf-8;
	 
	#ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
	
	# Enumerate all the Tornado servers here
	upstream frontends {
		server 127.0.0.1:8000;
		#server 127.0.0.1:8001;
		#server 127.0.0.1:8002;
		#server 127.0.0.1:8003;
	}
	
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    keepalive_timeout 65;
	proxy_read_timeout 200;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	gzip on;
	gzip_min_length 1000;
	gzip_proxied any;
	gzip_types text/plain text/css text/xml
	application/x-javascript application/xml
	application/atom+xml text/javascript;
	
	# Only retry if there was a communication error, not a timeout
	# on the Tornado server (to avoid propagating "queries of death"
	# to all frontends)
	proxy_next_upstream error;
	
    server {
        listen       443 ssl;
		server_name  localhost;
		keepalive_timeout   70;
		
		ssl_certificate      localhost.cert;
		ssl_certificate_key  localhost.key;

		ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers  on;

        # Allow file uploads
        client_max_body_size 50M;

        location ^~ /static/ {
            root /var/www;
            if ($query_string) {
                expires max;
            }
        }
        location = /favicon.ico {
            rewrite (.*) /static/favicon.ico;
        }
        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }

        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
